# Global settings - most REQUIRED
time_framework = [2020, 2025, 2030, 2035, 2040, 2045, 2050]
foresight = 5   # Has to be a multiple of the minimum separation between the years in time framework
regions = ["R1"]
interest_rate = 0.1
interpolation_mode = 'Active'
log_level = 'info'
excluded_commodities = ["CO2f",	"electricity",
                    	"gas",	"diesel", 	"gasoline",	"LPG",	"hydrogen"]

# Custom modules
[plugins]
plugins = "{path}/plugin.py"  # paths to each additional plugin

# Convergence parameters
equilibrium_variable = 'demand'
maximum_iterations = 100
tolerance = 0.1
tolerance_unmet_demand = -0.1

[[outputs]]
quantity = "prices"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"

[[outputs]]
quantity = "capacity"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"

[[outputs]]
quantity = "fuel_costs"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["region", "installed", "technology", "year", "agent", "category", "sector", "fuel_consumption_costs"]

[[outputs]]
quantity = "supply"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["commodity",	"region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"supply"]

[[outputs]]
quantity = "consumption"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["commodity",	"region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"consumption"]

[[outputs]]
quantity = "capital_costs"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"capital_costs"]

[[outputs]]
quantity = "emission_costs"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"emission_costs"]

[[outputs]]
quantity = "LCOE"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["region",	"technology", "year",	"agent",	"category",	"sector",	"LCOE"]

[[outputs]]
quantity = "EAC"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
#columns = ["region",		"technology", "year",	"agent",	"category",	"sector",	"EAC"]

# Carbon budget control
[carbon_budget_control]
budget = []

[global_input_files]
projections = '{path}/input/Projections.csv'
global_commodities = '{path}/input/GlobalCommodities.csv'


[sectors.road_cars]
type = 'default'
priority = 1
dispatch_production = 'share'

technodata = '{path}/technodata/road_cars/Technodata.csv'
commodities_in = '{path}/technodata/road_cars/CommIn.csv'
commodities_out = '{path}/technodata/road_cars/CommOut.csv'

[sectors.road_cars.subsectors.retro_and_new]
agents = '{path}/technodata/Agents.csv'
existing_capacity = '{path}/technodata/road_cars/ExistingCapacity.csv'
lpsolver = "scipy"  # Optional, defaults to "adhoc"
constraints = [  # Optional, defaults to the constraints below
    "max_production",
    "max_capacity_expansion",
    "demand",
    "search_space",
]
demand_share = "new_and_retro"  # Optional, default to new_and_retro
forecast = 5  # Optional, defaults to 5 

[[sectors.road_cars.interactions]] 
net = 'new_to_retro'
interaction = 'transfer'

[sectors.road_cars_presets]
type = 'presets'
priority = 0
macrodrivers_path = '{path}/technodata/preset/Macrodrivers.csv'
regression_path = '{path}/technodata/preset/regressionparameters.csv'

[timeslices]
all-year.all-week.night = 1460
all-year.all-week.morning = 1460
all-year.all-week.afternoon = 1460
all-year.all-week.early-peak = 1460
all-year.all-week.late-peak = 1460
all-year.all-week.evening = 1460
level_names = ["month", "day", "hour"]

